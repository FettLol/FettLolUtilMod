plugins {
    id 'fabric-loom' version '1.0.11'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

mod_id = project.mod_id
version = "${project.mod_version}+${project.minecraft_version}"
group = project.maven_group

repositories {
    mavenLocal()
    maven {
        name = "Cotton"
        url = "https://server.bbkr.space/artifactory/libs-release"
    }
    maven {
        name = "Jitpack"
        url = "https://jitpack.io"
    }
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/releases"
    }
    maven {
        name = "Shedaniel"
        url = "https://maven.shedaniel.me/"
    }
}

loom {
    accessWidenerPath = file("src/main/resources/fettlol.accesswidener")
}

dependencies {
    // Minecraft and Fabric
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

    // Cloth-Config (Required dependency)
    modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    // ModMenu (Suggested dependency)
    modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}") {
        exclude module: 'fabric-api'
    }

}

processResources {
    inputs.property "version", project.mod_version
    inputs.property "name", project.name

    filesMatching("fabric.mod.json") {
        expand(
                "version": project.version,
                "minecraft_version": project.minecraft_version,
                "maven_group": project.maven_group,
                "name": project.name,
                "loader_version": project.fabric_loader_version,
                "mod_id": project.mod_id,
                "init_class": project.init_class,
                "author": project.author,
                "fabric_api_version": project.fabric_api_version
        )
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 17
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.mod_id}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(remapJar) { builtBy remapJar }
            artifact(sourcesJar) { builtBy remapSourcesJar }
        }
    }

    repositories {}
}
